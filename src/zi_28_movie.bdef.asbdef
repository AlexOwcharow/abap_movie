managed implementation in class zbp_28_movie unique;
strict ( 2 );

/* Parent Node Rating*/
define behavior for ZI_28_Movie alias Movie
persistent table ZABAP_MOVIE_A
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  field ( readonly, numbering: managed) MovieUuid;
  field ( readonly) CreatedAt,CreatedBy,LastChangedAt,LastChangedBy;
  field ( mandatory : create) Genre, PublishingYear, RuntimeInMin, Title;
  field ( readonly : update) Genre, PublishingYear, RuntimeInMin, Title;

  association _Ratings { create;}

  validation validate_genre on save { create;  }

  mapping for zabap_movie_a corresponding {
    CreatedAt = created_at;
    CreatedBy = created_by;
    ImageUrl = image_url;
    LastChangedAt = last_changed_at;
    LastChangedBy = last_changed_by;
    MovieUuid = movie_uuid;
    PublishingYear = publishing_year;
    RuntimeInMin = runtime_in_min;
  }
}

/* Child Node Rating*/
define behavior for ZI_28_Rating alias Rating
persistent table zabap_rating_a
lock dependent by _Movie
authorization dependent by _Movie
//etag master <field_name>
{
  update;
  delete;
  field ( readonly, numbering : managed ) RatingUuid;
  field ( readonly ) MovieUuid;
  association _Movie;

  mapping for zabap_rating_a corresponding
    {
      MovieUuid  = movie_uuid;
      RatingDate = rating_date;
      RatingUuid = rating_uuid;
      UserName   = user_name;
    }
}